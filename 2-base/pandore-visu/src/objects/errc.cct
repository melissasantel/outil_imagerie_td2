/* -*- c-basic-offset: 3; mode:c++ -*-
 *
 * PANDORE (PANTHEON Project)
 *
 * GREYC IMAGE
 * 6 Boulevard Mar√©chal Juin
 * F-14050 Caen Cedex France
 *
 * This file is free software. You can use it, distribute it
 * and/or modify it. However, the entire risk to the quality
 * and performance of this program is with you.
 *
 *
 * For more information, refer to:
 * http://www.greyc.ensicaen.fr/EquipeImage/Pandore/
 */

/**
 * @author Alexandre Duret-Lutz. 1999-10-08
 * @author RÈgis Clouard - 2001-04-10 (version 3.00)
 * @author RÈgis Clouard - 2006-09-05 (fix buf on Visual C++ 6)
 */

/**
 * @file errc.cpp
 *
 * Error class and exit values.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <pandore.h>
#ifdef _MSC_VER
#include <io.h>
#endif

/**
 *
 * @param e	
 */
void pandore::Exit (const Errc &e ) { e.Exit(); }

/**
 *
 */
void pandore::Errc::Exit( ) const {
   switch (_ret) {
   case FS_RET : pandore::Exit(_val.fs); 
##begin other_cases TYPE
   case TYPE$_RET : pandore::Exit(_val.v_$TYPE);
##end
##forallbase(other_cases,/./)
   }
}

/*
 * Writes the result of an operator execution into the HOME/.pandore file.
 * This allows to handle Errc values, while the exit command
 * only allows CHAR values.
 */
void pandore::Exit( FS_t statut ) {
   FILE *fp;
   char	nomf[256];
   char *dir;
   
   if (!(dir=getenv(HOME))) exit(2);
   strcpy(nomf,dir);
   strcat(nomf,RESFIL);
   if ((fp=fopen(nomf,"wb"))) {
      if (statut == FAILURE){
	 fwrite("E",sizeof(Char),1,fp);
	 fclose(fp);
	 exit(1);
      }
      else{
	 fwrite("S",sizeof(Char),1,fp);
	 fclose(fp);
	 exit(0);
      }
   }
   exit(1);
}

##begin Exit TYPE NBR
/*
 * Writes the result of an operator execution into the HOME/.pandore file.
 * This allows to handle TYPE values, while the exit command
 * only allows CHAR values.
 */
void pandore::Exit( TYPE statut ) {
   FILE *fp;
   char	nomf[256];
   char *dir;
   
   if (!(dir=getenv(HOME))) exit(2);
   strcpy(nomf,dir);
   strcat(nomf,RESFIL);
   if ((fp=fopen(nomf,"wb"))>0){
      fwrite("NBR",sizeof(Char),1,fp);
      fwrite(&statut,sizeof(TYPE),1,fp);
      fclose(fp);
      exit(0);
   }
   exit(1);
}
##end
##Exit(Char,  0)
##Exit(Short, 1)
##Exit(Long,  2)
##Exit(Uchar, 3)
##Exit(Ushort,4)
##Exit(Ulong, 5)
##Exit(Float, 6)
##Exit(Double,7)
